#!/bin/bash

# Habilita modo seguro: interrompe a execu√ß√£o em erros cr√≠ticos
set -e

# Verifica se o script est√° sendo executado como root
if [[ "$EUID" -ne 0 ]]; then 
    echo "‚ùå Este script precisa ser executado como root. Use sudo!"
    exit 1
fi

echo "üõ†Ô∏è Iniciando a limpeza e atualiza√ß√£o do sistema..."
echo "üíæ Certifique-se de salvar seu trabalho antes de continuar!"

# Aguarda 5 segundos para permitir o cancelamento
sleep 5

# Limpeza de pacotes obsoletos
echo "üóëÔ∏è Removendo pacotes desnecess√°rios..."
apt autoclean -y && apt autoremove -y

# Atualiza√ß√£o de pacotes
echo "‚¨ÜÔ∏è Atualizando pacotes do sistema..."
apt update && apt upgrade -y

# Atualiza√ß√£o de pacotes Snap
if command -v snap &> /dev/null; then 
    echo "üì¶ Atualizando pacotes Snap..."
    snap refresh
else 
    echo "‚ö†Ô∏è Snap n√£o encontrado. Pulando atualiza√ß√£o do Snap..."   
fi

# Limpeza da lixeira do usu√°rio
echo "üóëÔ∏è Esvaziando a lixeira..."
TRASH_PATHS=( 
    "/home/$SUDO_USER/.local/share/Trash/files/*"
    "/home/$SUDO_USER/.local/share/Trash/expunged/*"
    "/home/$SUDO_USER/.local/share/Trash/info/*"
)
for path in "${TRASH_PATHS[@]}"; do 
    rm -rf "$path" || true
done

# Desfragmenta√ß√£o do sistema de arquivos (SSD-friendly)
echo "\n‚ö° Otimizando o sistema de arquivos..."
fstrim --all || true 

# Limpeza de logs antigos (mant√©m os √∫ltimos 2 dias)
echo "üìù Removendo logs antigos..."
journalctl --vacuum-time=2d 

echo -e "\n‚úÖ Limpeza e atualiza√ß√£o conclu√≠das com sucesso!"
